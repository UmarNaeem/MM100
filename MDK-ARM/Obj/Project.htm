<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Obj\Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Obj\Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5040049: Last Updated: Thu Oct 16 12:34:34 2014
<BR><P>
<H3>Maximum Stack Usage =        608 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Main_StateMachine &rArr; RequestProcessController &rArr; gprsRequestProcess &rArr; Config_Settings_Request_Process &rArr; aasciToFloatCopy &rArr; strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[39]">ADC3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from eeprom.o(i.DMA1_Channel3_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[42]">DMA2_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[43]">DMA2_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[44]">DMA2_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[45]">DMA2_Channel4_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from main.o(i.EXTI0_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from main.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from main.o(i.EXTI4_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from main.o(i.EXTI9_5_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3a]">FSMC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f10x_it.o(i.HardFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f10x_it.o(i.PendSV_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[33]">RTCAlarm_IRQHandler</a> from main.o(i.RTCAlarm_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f10x_it.o(i.SysTick_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[47]">SystemInit</a> from system_stm32f10x.o(i.SystemInit) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from main.o(i.TIM2_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from main.o(i.TIM4_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from main.o(i.TIM5_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[40]">TIM6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[36]">TIM8_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from main.o(i.UART5_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[48]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[4a]">_sbackspace</a> from _sgetc.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[49]">_sgetc</a> from _sgetc.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[4c]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[4b]">isspace</a> from isspace_o.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[46]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[48]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[19c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[4d]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[74]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[19d]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[19e]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[19f]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[1a0]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[1a1]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[1a2]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1a3]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[130]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_convert_file
</UL>

<P><STRONG><a name="[1a4]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[51]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[91]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataTransmissionController
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GeoDataAppendToBuffer
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppendToBuffer
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestReplyGenOk
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestReplyGenError
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestReplyErrorConfig
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestReplyConfig
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmVerGen
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pingPacketGen_SL_Protocol
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pingPacketGen
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Packet_Formatter
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extension_Formatter
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO_StateMachine
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO_StateMachine
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOMessageGenerator
</UL>

<P><STRONG><a name="[b6]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SEND_Get
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extension_Formatter
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Read_module
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_GeneratorAlerts
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Generator
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Select_SIM
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Init_Reset
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTP_initialize
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SATE_Get
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SATE_FTP_Get
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_Network_Get
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_FTPConnect_Get
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_Connect_Get
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_FTP_Get
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCallStatus
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Processor
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_RSSI_Get
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_OK_Get
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_MCC_MNC_Get
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;geoFencingEngine
</UL>

<P><STRONG><a name="[95]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Network_Check
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTP_initialize
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APNSettings
</UL>

<P><STRONG><a name="[154]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Processor
</UL>

<P><STRONG><a name="[bb]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GeoDataAppendToBuffer
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_FactorySettings_SIM2
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_FactorySettings_SIM1_SIM2
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_FactorySettings_SIM1
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Packet_Formatter
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRStrackingModule
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Network_Check
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SATE_Get
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SATE_FTP_Get
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_MCC_MNC_Get
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;geoFencingEngine
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
</UL>

<P><STRONG><a name="[155]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprsRequestProcess
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Read_module
</UL>

<P><STRONG><a name="[52]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magnetometer_Heading
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketNoExtract
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRStrackingModule
</UL>

<P><STRONG><a name="[55]"></a>atol</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atol &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccelrationXYZ
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO2Hys
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO1Hys
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO_StateMachine
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[59]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO2Hys
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO1Hys
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccelrationXYZ
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO2Hys
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO1Hys
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO_StateMachine
</UL>

<P><STRONG><a name="[5b]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO2Hys
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO1Hys
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO_StateMachine
</UL>

<P><STRONG><a name="[5c]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccelrationXYZ
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Controller
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distanceCalculator
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[61]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isLeft
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distanceCalculator
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gFormat
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[62]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distanceCalculator
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[63]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wn_PnPoly
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isLeft
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distanceCalculator
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gFormat
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[64]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distanceCalculator
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
</UL>

<P><STRONG><a name="[66]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO2Hys
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO1Hys
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO_StateMachine
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
</UL>

<P><STRONG><a name="[67]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Controller
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[68]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pingPacketGen
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Packet_Formatter
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gFormat
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO2Hys
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO1Hys
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO_StateMachine
</UL>

<P><STRONG><a name="[69]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Controller
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[9b]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccelrationXYZ
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extension_Formatter
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
</UL>

<P><STRONG><a name="[1a5]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[9d]"></a>__aeabi_cdcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccelrationXYZ
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wn_PnPoly
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Controller
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
</UL>

<P><STRONG><a name="[9e]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccelrationXYZ
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wn_PnPoly
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccelrationXYZ
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gFormat
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[fa]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[8a]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccelrationXYZ
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO2Hys
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO1Hys
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeComputeController
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO_StateMachine
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
</UL>

<P><STRONG><a name="[8b]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccelrationXYZ
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO2Hys
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO1Hys
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeComputeController
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO_StateMachine
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Controller
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
</UL>

<P><STRONG><a name="[1a6]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[18f]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[6c]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[5d]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[1a7]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[1a8]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[1a9]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>__strtod_int</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtod
</UL>

<P><STRONG><a name="[54]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[1aa]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[57]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[60]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[5f]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
</UL>

<P><STRONG><a name="[186]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[1ab]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[4e]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[1ac]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[4b]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace_o.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isspace
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[6e]"></a>_scanf_real</STRONG> (Thumb, 0 bytes, Stack size 104 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>

<P><STRONG><a name="[77]"></a>_scanf_really_real</STRONG> (Thumb, 556 bytes, Stack size 104 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[49]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[4a]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[71]"></a>_strtoul</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[79]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_ul2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[1ad]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[1ae]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[7a]"></a>ADC_Channel_Init</STRONG> (Thumb, 182 bytes, Stack size 8 bytes, mcu_io.o(i.ADC_Channel_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ADC_Channel_Init &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeController
</UL>

<P><STRONG><a name="[84]"></a>ADC_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StopConversion
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartConversion
</UL>

<P><STRONG><a name="[83]"></a>ADC_DMACmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StopConversion
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartConversion
</UL>

<P><STRONG><a name="[80]"></a>ADC_Init</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f10x_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Channel_Init
</UL>

<P><STRONG><a name="[81]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 184 bytes, Stack size 20 bytes, stm32f10x_adc.o(i.ADC_RegularChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Channel_Init
</UL>

<P><STRONG><a name="[85]"></a>ADC_SoftwareStartConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_SoftwareStartConvCmd))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartConversion
</UL>

<P><STRONG><a name="[82]"></a>ADC_StartConversion</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mcu_io.o(i.ADC_StartConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_StartConversion
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACmd
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeController
</UL>

<P><STRONG><a name="[86]"></a>ADC_StopConversion</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, mcu_io.o(i.ADC_StopConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_StopConversion
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACmd
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeController
</UL>

<P><STRONG><a name="[87]"></a>AIO1Hys</STRONG> (Thumb, 414 bytes, Stack size 24 bytes, tracker_misc.o(i.AIO1Hys))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = AIO1Hys &rArr; AIO_StateMachine &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO_StateMachine
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[8d]"></a>AIO2Hys</STRONG> (Thumb, 414 bytes, Stack size 24 bytes, tracker_misc.o(i.AIO2Hys))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = AIO2Hys &rArr; AIO_StateMachine &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO_StateMachine
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[8c]"></a>AIO_StateMachine</STRONG> (Thumb, 460 bytes, Stack size 24 bytes, tracker_misc.o(i.AIO_StateMachine))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AIO_StateMachine &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_StateMachine
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO2Hys
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO1Hys
</UL>

<P><STRONG><a name="[92]"></a>APNSettings</STRONG> (Thumb, 250 bytes, Stack size 16 bytes, gsm.o(i.APNSettings))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = APNSettings &rArr; Command_Send_OK_Get &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Put
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_OK_Get
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_initialize
</UL>

<P><STRONG><a name="[97]"></a>Accelerometer_Test</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ecompass.o(i.Accelerometer_Test))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Accelerometer_Test &rArr; BMC_ByteRead &rArr; BMA_ReadByte &rArr; BMA_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMC_ByteRead
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[99]"></a>AccelrationXYZ</STRONG> (Thumb, 394 bytes, Stack size 48 bytes, ecompass.o(i.AccelrationXYZ))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = AccelrationXYZ &rArr; gFormat &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gFormat
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMC_ByteRead
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[9f]"></a>AnyMotionCriteriaSet</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ecompass.o(i.AnyMotionCriteriaSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AnyMotionCriteriaSet &rArr; BMC_ByteWrite &rArr; BMA_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMC_ByteWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>AppendToBuffer</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, configuration.o(i.AppendToBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AppendToBuffer &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
</UL>

<P><STRONG><a name="[a2]"></a>BKP_DeInit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f10x_bkp.o(i.BKP_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BKP_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_BackupResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[a4]"></a>BMA_ReadByte</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ecompass.o(i.BMA_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BMA_ReadByte &rArr; BMA_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMC_ByteRead
</UL>

<P><STRONG><a name="[a5]"></a>BMA_SendByte</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ecompass.o(i.BMA_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BMA_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMC_ByteWrite
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMC_ByteRead
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA_ReadByte
</UL>

<P><STRONG><a name="[98]"></a>BMC_ByteRead</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ecompass.o(i.BMC_ByteRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BMC_ByteRead &rArr; BMA_ReadByte &rArr; BMA_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA_SendByte
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMC_init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccelrationXYZ
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accelerometer_Test
</UL>

<P><STRONG><a name="[a0]"></a>BMC_ByteWrite</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ecompass.o(i.BMC_ByteWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BMC_ByteWrite &rArr; BMA_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMC_init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnyMotionCriteriaSet
</UL>

<P><STRONG><a name="[ab]"></a>BMC_init</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, ecompass.o(i.BMC_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BMC_init &rArr; BMC_ByteRead &rArr; BMA_ReadByte &rArr; BMA_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMC_ByteWrite
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMC_ByteRead
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[ac]"></a>COM_Init</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, mcu_io.o(i.COM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = COM_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Get
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[b4]"></a>CheckCallStatus</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, gsm.o(i.CheckCallStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CheckCallStatus &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
</UL>

<P><STRONG><a name="[b7]"></a>Command_FTP_Get</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, gsm.o(i.Command_FTP_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Command_FTP_Get &rArr; USART_Put
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Put
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
</UL>

<P><STRONG><a name="[b8]"></a>Command_Send_Connect_Get</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, gsm.o(i.Command_Send_Connect_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Command_Send_Connect_Get &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_initialize
</UL>

<P><STRONG><a name="[b9]"></a>Command_Send_FTPConnect_Get</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, gsm.o(i.Command_Send_FTPConnect_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Command_Send_FTPConnect_Get &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTP_initialize
</UL>

<P><STRONG><a name="[bc]"></a>Command_Send_Network_Get</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, gsm.o(i.Command_Send_Network_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Command_Send_Network_Get &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Network_Check
</UL>

<P><STRONG><a name="[be]"></a>Command_Send_SATE_FTP_Get</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, gsm.o(i.Command_Send_SATE_FTP_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Command_Send_SATE_FTP_Get &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
</UL>

<P><STRONG><a name="[bf]"></a>Command_Send_SATE_Get</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, gsm.o(i.Command_Send_SATE_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Command_Send_SATE_Get &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
</UL>

<P><STRONG><a name="[c0]"></a>Command_Send_SEND_Get</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, gsm.o(i.Command_Send_SEND_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Command_Send_SEND_Get &rArr; USART_Put
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Put
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_viaCounter
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataTransmissionController
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRStrackingModule
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStringHandler
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataRecoveryHandler
</UL>

<P><STRONG><a name="[c2]"></a>ConfigReplyReady</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, configuration.o(i.ConfigReplyReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ConfigReplyReady &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestReplyConfig
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
</UL>

<P><STRONG><a name="[c4]"></a>Config_FactorySettings_SIM1</STRONG> (Thumb, 246 bytes, Stack size 8 bytes, configuration.o(i.Config_FactorySettings_SIM1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Config_FactorySettings_SIM1 &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_FactorySettings_SIM1_SIM2
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Write
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c5]"></a>Config_FactorySettings_SIM1_SIM2</STRONG> (Thumb, 1458 bytes, Stack size 8 bytes, configuration.o(i.Config_FactorySettings_SIM1_SIM2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Config_FactorySettings_SIM1_SIM2
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_FactorySettings_SIM2
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_FactorySettings_SIM1
</UL>

<P><STRONG><a name="[c6]"></a>Config_FactorySettings_SIM2</STRONG> (Thumb, 246 bytes, Stack size 8 bytes, configuration.o(i.Config_FactorySettings_SIM2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Config_FactorySettings_SIM2 &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_FactorySettings_SIM1_SIM2
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Write
</UL>

<P><STRONG><a name="[c7]"></a>Config_Settings_Request_Process</STRONG> (Thumb, 15320 bytes, Stack size 328 bytes, configuration.o(i.Config_Settings_Request_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = Config_Settings_Request_Process &rArr; aasciToFloatCopy &rArr; strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnlen
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_word
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_dword
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_read_dword
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataTransmissionController
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multiByteContentWrite
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteDouble
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataExtractor8Comma
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataExtractor7Comma
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataExtractor6Comma
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataExtractor5Comma
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GeoDataAppendToBuffer
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigReplyReady
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppendToBuffer
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestReplyGenOk
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestReplyGenError
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestReplyErrorConfig
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestContentExtract
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmVerGen
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteFloat
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataExtractor4Comma
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataExtractor3Comma
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataExtractor2Comma
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aasciToFloatCopy
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmPowerOff
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_byte
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Read
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprsRequestProcess
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Read_module
</UL>

<P><STRONG><a name="[e3]"></a>DIO1Hys</STRONG> (Thumb, 222 bytes, Stack size 8 bytes, tracker_misc.o(i.DIO1Hys))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DIO1Hys &rArr; DIO_StateMachine &rArr; IOMessageGenerator &rArr; SMS_GeneratorAlerts &rArr; USART_Put
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO_StateMachine
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOMessageGenerator
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[e7]"></a>DIO2Hys</STRONG> (Thumb, 222 bytes, Stack size 8 bytes, tracker_misc.o(i.DIO2Hys))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DIO2Hys &rArr; DIO_StateMachine &rArr; IOMessageGenerator &rArr; SMS_GeneratorAlerts &rArr; USART_Put
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO_StateMachine
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOMessageGenerator
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[e8]"></a>DIO3Hys</STRONG> (Thumb, 222 bytes, Stack size 8 bytes, tracker_misc.o(i.DIO3Hys))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DIO3Hys &rArr; DIO_StateMachine &rArr; IOMessageGenerator &rArr; SMS_GeneratorAlerts &rArr; USART_Put
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO_StateMachine
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOMessageGenerator
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[e6]"></a>DIO_StateMachine</STRONG> (Thumb, 2110 bytes, Stack size 8 bytes, tracker_misc.o(i.DIO_StateMachine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DIO_StateMachine &rArr; IOMessageGenerator &rArr; SMS_GeneratorAlerts &rArr; USART_Put
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ToggleBits
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOMessageGenerator
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_StateMachine
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO3Hys
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO2Hys
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO1Hys
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeController
</UL>

<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, eeprom.o(i.DMA1_Channel3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA1_Channel3_IRQHandler &rArr; Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[eb]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[7f]"></a>DMA_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_DMA_WritePage
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Channel_Init
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[7d]"></a>DMA_DeInit</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Channel_Init
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_DMA_Configuration
</UL>

<P><STRONG><a name="[ea]"></a>DMA_GetITStatus</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[19a]"></a>DMA_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_DMA_Configuration
</UL>

<P><STRONG><a name="[7e]"></a>DMA_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Channel_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_DMA_Configuration
</UL>

<P><STRONG><a name="[ed]"></a>DataRecoveryHandler</STRONG> (Thumb, 268 bytes, Stack size 8 bytes, tracker_misc.o(i.DataRecoveryHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = DataRecoveryHandler &rArr; PacketNoExtract &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SEND_Get
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketNoExtract
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read_Module
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataTransmissionController
</UL>

<P><STRONG><a name="[f1]"></a>DataStringHandler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, tracker_misc.o(i.DataStringHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DataStringHandler &rArr; EEPROM_Write_Module &rArr; EEPROM_I2C_SQ_Write &rArr; EEPROM_WritePage &rArr; EEPROM_WaitForWriteEnd &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SEND_Get
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Write_Module
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataTransmissionController
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRStrackingModule
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[ec]"></a>Delay</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, global_defines.o(i.Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[b5]"></a>Delay_ms</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, global_defines.o(i.Delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataTransmissionController
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Get
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multiByteContentRead
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmPowerOn
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeController
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataRecoveryHandler
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO_StateMachine
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getIMEI
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Read_module
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_GeneratorAlerts
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Generator
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Select_SIM
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Init_Reset
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_initialize
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTP_initialize
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SATE_Get
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SATE_FTP_Get
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_Network_Get
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_FTPConnect_Get
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_Connect_Get
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_FTP_Get
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCallStatus
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_RSSI_Get
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_OK_Get
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_MCC_MNC_Get
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Controller
</UL>

<P><STRONG><a name="[c1]"></a>Delay_viaCounter</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, global_defines.o(i.Delay_viaCounter))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SEND_Get
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
</UL>

<P><STRONG><a name="[f3]"></a>EEPROM_I2C_SQ_Read</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, eeprom.o(i.EEPROM_I2C_SQ_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EEPROM_I2C_SQ_Read &rArr; EEPROM_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_convert_file
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read_Module
</UL>

<P><STRONG><a name="[f5]"></a>EEPROM_I2C_SQ_Write</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, eeprom.o(i.EEPROM_I2C_SQ_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = EEPROM_I2C_SQ_Write &rArr; EEPROM_WritePage &rArr; EEPROM_WaitForWriteEnd &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_convert_file
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Write_Module
</UL>

<P><STRONG><a name="[ee]"></a>EEPROM_Read_Module</STRONG> (Thumb, 276 bytes, Stack size 16 bytes, eeprom.o(i.EEPROM_Read_Module))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EEPROM_Read_Module &rArr; EEPROM_I2C_SQ_Read &rArr; EEPROM_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_I2C_SQ_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataRecoveryHandler
</UL>

<P><STRONG><a name="[f4]"></a>EEPROM_SendByte</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, eeprom.o(i.EEPROM_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EEPROM_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_read_byte
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_DMA_WritePage
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_byte
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WritePage
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteEnable
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WaitForWriteEnd
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_I2C_SQ_Read
</UL>

<P><STRONG><a name="[f7]"></a>EEPROM_WaitForWriteEnd</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, eeprom.o(i.EEPROM_WaitForWriteEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EEPROM_WaitForWriteEnd &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_byte
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WritePage
</UL>

<P><STRONG><a name="[f8]"></a>EEPROM_WriteEnable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, eeprom.o(i.EEPROM_WriteEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EEPROM_WriteEnable &rArr; EEPROM_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_DMA_WritePage
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_byte
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WritePage
</UL>

<P><STRONG><a name="[f6]"></a>EEPROM_WritePage</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, eeprom.o(i.EEPROM_WritePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EEPROM_WritePage &rArr; EEPROM_WaitForWriteEnd &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteEnable
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WaitForWriteEnd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_I2C_SQ_Write
</UL>

<P><STRONG><a name="[f2]"></a>EEPROM_Write_Module</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, eeprom.o(i.EEPROM_Write_Module))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EEPROM_Write_Module &rArr; EEPROM_I2C_SQ_Write &rArr; EEPROM_WritePage &rArr; EEPROM_WaitForWriteEnd &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_I2C_SQ_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStringHandler
</UL>

<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, main.o(i.EXTI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = EXTI0_IRQHandler &rArr; AccelrationXYZ &rArr; gFormat &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccelrationXYZ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI15_10_IRQHandler &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, main.o(i.EXTI4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI4_IRQHandler &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, main.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI9_5_IRQHandler &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[fb]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCAlarm_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[f9]"></a>EXTI_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[10c]"></a>EXTI_Init</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTI_Init
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeController
</UL>

<P><STRONG><a name="[fc]"></a>Extension_Formatter</STRONG> (Thumb, 428 bytes, Stack size 16 bytes, tracker_misc.o(i.Extension_Formatter))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Extension_Formatter &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Packet_Formatter
</UL>

<P><STRONG><a name="[fd]"></a>FTP_initialize</STRONG> (Thumb, 290 bytes, Stack size 8 bytes, gsm.o(i.FTP_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FTP_initialize &rArr; Command_Send_OK_Get &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Put
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_FTPConnect_Get
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_OK_Get
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
</UL>

<P><STRONG><a name="[e0]"></a>Factory_Config_Read</STRONG> (Thumb, 3276 bytes, Stack size 24 bytes, configuration.o(i.Factory_Config_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Factory_Config_Read &rArr; multiByteContentRead &rArr; eeprom_read_byte &rArr; EEPROM_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_read_word
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_read_dword
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_read_byte
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromReadDouble
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromReadFloat
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multiByteContentRead
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
</UL>

<P><STRONG><a name="[103]"></a>Factory_Config_Write</STRONG> (Thumb, 3626 bytes, Stack size 32 bytes, configuration.o(i.Factory_Config_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Factory_Config_Write &rArr; multiByteContentWrite &rArr; eeprom_write_byte &rArr; EEPROM_WaitForWriteEnd &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_word
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_dword
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_read_byte
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multiByteContentWrite
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_FactorySettings_SIM2
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteFloat
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_byte
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_FactorySettings_SIM1
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[108]"></a>GPIO_DeInit</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, stm32f10x_gpio.o(i.GPIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTI_Init
</UL>

<P><STRONG><a name="[10b]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f10x_gpio.o(i.GPIO_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTI_Init
</UL>

<P><STRONG><a name="[10a]"></a>GPIO_EXTI_Init</STRONG> (Thumb, 442 bytes, Stack size 8 bytes, mcu_io.o(i.GPIO_EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_EXTI_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[ae]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIBus_Init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTI_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Init
</UL>

<P><STRONG><a name="[12b]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, stm32f10x_gpio.o(i.GPIO_PinRemapConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
</UL>

<P><STRONG><a name="[e4]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmPowerOn
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmPowerOff
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPowerHys
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ignition_module
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IgnitionHys
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO3Hys
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO2Hys
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO1Hys
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeComputeController
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeController
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Controller
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
</UL>

<P><STRONG><a name="[a9]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_read_byte
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Get
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIBus_CS_high_low
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_DMA_WritePage
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmPowerOn
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_byte
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Blink
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeController
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO_StateMachine
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Extraction_Module
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WritePage
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteEnable
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WaitForWriteEnd
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_I2C_SQ_Read
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMC_ByteWrite
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMC_ByteRead
</UL>

<P><STRONG><a name="[aa]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_read_byte
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Get
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIBus_CS_high_low
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmPowerOn
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_byte
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Blink
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeController
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO_StateMachine
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Extraction_Module
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WritePage
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteEnable
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WaitForWriteEnd
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_I2C_SQ_Read
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMC_ByteWrite
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMC_ByteRead
</UL>

<P><STRONG><a name="[e9]"></a>GPIO_ToggleBits</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ToggleBits))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO_StateMachine
</UL>

<P><STRONG><a name="[113]"></a>GPRS_initialize</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, gsm.o(i.GPRS_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GPRS_initialize &rArr; APNSettings &rArr; Command_Send_OK_Get &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Put
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_Connect_Get
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APNSettings
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
</UL>

<P><STRONG><a name="[114]"></a>GPRStrackingModule</STRONG> (Thumb, 3810 bytes, Stack size 8 bytes, tracker_misc.o(i.GPRStrackingModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GPRStrackingModule &rArr; PacketNoExtract &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SEND_Get
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pingPacketGen_SL_Protocol
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pingPacketGen
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Packet_Formatter
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketNoExtract
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAlertOn
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStringHandler
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataTransmissionController
</UL>

<P><STRONG><a name="[119]"></a>GPS_Controller</STRONG> (Thumb, 668 bytes, Stack size 48 bytes, gps.o(i.GPS_Controller))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = GPS_Controller &rArr; distanceCalculator &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_dword
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;geoFencingEngine
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_TimeDate
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distanceCalculator
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Extraction_Module
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPGGA_Extraction_Module
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_StateMachine
</UL>

<P><STRONG><a name="[11d]"></a>GPS_StateMachine</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tracker_misc.o(i.GPS_StateMachine))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = GPS_StateMachine &rArr; GPS_Controller &rArr; distanceCalculator &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Controller
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_StateMachine
</UL>

<P><STRONG><a name="[11e]"></a>GSM_Init_Reset</STRONG> (Thumb, 558 bytes, Stack size 16 bytes, gsm.o(i.GSM_Init_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GSM_Init_Reset &rArr; GSM_Select_SIM &rArr; gsmPowerOff &rArr; Command_Send_OK_Get &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Select_SIM
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_OK_Get
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
</UL>

<P><STRONG><a name="[120]"></a>GSM_Network_Check</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, gsm.o(i.GSM_Network_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GSM_Network_Check &rArr; Command_Send_MCC_MNC_Get &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_Network_Get
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_RSSI_Get
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_MCC_MNC_Get
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
</UL>

<P><STRONG><a name="[11f]"></a>GSM_Select_SIM</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, gsm.o(i.GSM_Select_SIM))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GSM_Select_SIM &rArr; gsmPowerOff &rArr; Command_Send_OK_Get &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmPowerOn
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmPowerOff
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Init_Reset
</UL>

<P><STRONG><a name="[123]"></a>GSM_StateMachine</STRONG> (Thumb, 950 bytes, Stack size 8 bytes, tracker_misc.o(i.GSM_StateMachine))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GSM_StateMachine &rArr; IAP_convert_file &rArr; EEPROM_I2C_SQ_Write &rArr; EEPROM_WritePage &rArr; EEPROM_WaitForWriteEnd &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataTransmissionController
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmPowerOn
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmPowerOff
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_byte
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Read
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ToggleBits
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_convert_file
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getIMEI
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Select_SIM
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Network_Check
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Init_Reset
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_initialize
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTP_initialize
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SATE_Get
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SATE_FTP_Get
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_FTP_Get
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCallStatus
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_DMA_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_StateMachine
</UL>

<P><STRONG><a name="[e1]"></a>GeoDataAppendToBuffer</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, configuration.o(i.GeoDataAppendToBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GeoDataAppendToBuffer &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
</UL>

<P><STRONG><a name="[127]"></a>GetLSIFrequency</STRONG> (Thumb, 192 bytes, Stack size 8 bytes, main.o(i.GetLSIFrequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GetLSIFrequency &rArr; TIM_ICInit &rArr; TI4_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PrescalerConfig
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSICmd
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDT_Init
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[126]"></a>IAP_convert_file</STRONG> (Thumb, 454 bytes, Stack size 80 bytes, tracker_misc.o(i.IAP_convert_file))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = IAP_convert_file &rArr; EEPROM_I2C_SQ_Write &rArr; EEPROM_WritePage &rArr; EEPROM_WaitForWriteEnd &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_dword
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_byte
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_I2C_SQ_Write
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_I2C_SQ_Read
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
</UL>

<P><STRONG><a name="[182]"></a>IWDG_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDT_Init
</UL>

<P><STRONG><a name="[121]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_ReloadCounter))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDT_Init
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCAlarm_IRQHandler
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeController
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Select_SIM
</UL>

<P><STRONG><a name="[180]"></a>IWDG_SetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_SetPrescaler))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDT_Init
</UL>

<P><STRONG><a name="[181]"></a>IWDG_SetReload</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_SetReload))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDT_Init
</UL>

<P><STRONG><a name="[17f]"></a>IWDG_WriteAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_WriteAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDT_Init
</UL>

<P><STRONG><a name="[133]"></a>IgnitionHys</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, tracker_misc.o(i.IgnitionHys))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = IgnitionHys &rArr; IOMessageGenerator &rArr; SMS_GeneratorAlerts &rArr; USART_Put
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOMessageGenerator
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[134]"></a>Ignition_module</STRONG> (Thumb, 412 bytes, Stack size 8 bytes, tracker_misc.o(i.Ignition_module))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Ignition_module &rArr; eeprom_write_word &rArr; eeprom_write_byte &rArr; EEPROM_WaitForWriteEnd &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_word
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[11c]"></a>Init_TimeDate</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, gps.o(i.Init_TimeDate))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeController
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Controller
</UL>

<P><STRONG><a name="[116]"></a>IsAlertOn</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, tracker_misc.o(i.IsAlertOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IsAlertOn
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascii_to_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRStrackingModule
</UL>

<P><STRONG><a name="[136]"></a>MainPowerHys</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, tracker_misc.o(i.MainPowerHys))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MainPowerHys &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[137]"></a>Main_StateMachine</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, tracker_misc.o(i.Main_StateMachine))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = Main_StateMachine &rArr; RequestProcessController &rArr; gprsRequestProcess &rArr; Config_Settings_Request_Process &rArr; aasciToFloatCopy &rArr; strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataTransmissionController
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeController
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RequestProcessController
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_StateMachine
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO_StateMachine
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO_StateMachine
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[b3]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Interrupt
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Init
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_DMA_Configuration
</UL>

<P><STRONG><a name="[13a]"></a>NVIC_Interrupt</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, mcu_io.o(i.NVIC_Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_Interrupt &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b2]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Interrupt
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Init
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_DMA_Configuration
</UL>

<P><STRONG><a name="[199]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, misc.o(i.NVIC_SetVectorTable))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[145]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_pwr.o(i.PWR_BackupAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[13f]"></a>PWR_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_pwr.o(i.PWR_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCAlarm_IRQHandler
</UL>

<P><STRONG><a name="[165]"></a>PWR_EnterSTOPMode</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f10x_pwr.o(i.PWR_EnterSTOPMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWR_EnterSTOPMode
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeController
</UL>

<P><STRONG><a name="[13e]"></a>PWR_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_pwr.o(i.PWR_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCAlarm_IRQHandler
</UL>

<P><STRONG><a name="[ef]"></a>PacketNoExtract</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, tracker_misc.o(i.PacketNoExtract))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = PacketNoExtract &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRStrackingModule
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataRecoveryHandler
</UL>

<P><STRONG><a name="[117]"></a>Packet_Formatter</STRONG> (Thumb, 748 bytes, Stack size 40 bytes, tracker_misc.o(i.Packet_Formatter))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Packet_Formatter &rArr; multiByteContentWrite &rArr; eeprom_write_byte &rArr; EEPROM_WaitForWriteEnd &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnlen
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multiByteContentWrite
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multiByteContentRead
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extension_Formatter
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataTransmissionController
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRStrackingModule
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Channel_Init
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_DMA_Configuration
</UL>

<P><STRONG><a name="[ad]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIBus_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Init
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
</UL>

<P><STRONG><a name="[7c]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIBus_Init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTI_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Channel_Init
</UL>

<P><STRONG><a name="[109]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
</UL>

<P><STRONG><a name="[a3]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_BackupResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_DeInit
</UL>

<P><STRONG><a name="[17e]"></a>RCC_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDT_Init
</UL>

<P><STRONG><a name="[12f]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySysClocks
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
</UL>

<P><STRONG><a name="[129]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f10x_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDT_Init
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCLKConfig_STOP
</UL>

<P><STRONG><a name="[15f]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_GetSYSCLKSource))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCLKConfig_STOP
</UL>

<P><STRONG><a name="[15c]"></a>RCC_HSEConfig</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_HSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCLKConfig_STOP
</UL>

<P><STRONG><a name="[146]"></a>RCC_LSEConfig</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_LSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[128]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_LSICmd))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
</UL>

<P><STRONG><a name="[15d]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_PLLCmd))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCLKConfig_STOP
</UL>

<P><STRONG><a name="[148]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_RTCCLKCmd))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[147]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_RTCCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[15e]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_SYSCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCLKConfig_STOP
</UL>

<P><STRONG><a name="[13b]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f10x_rcc.o(i.RCC_WaitForHSEStartUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_WaitForHSEStartUp &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCLKConfig_STOP
</UL>

<P><STRONG><a name="[33]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, main.o(i.RTCAlarm_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = RTCAlarm_IRQHandler &rArr; SleepModeAlgo &rArr; TimeComputeController &rArr; eeprom_write_dword &rArr; eeprom_write_byte &rArr; EEPROM_WaitForWriteEnd &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeAlgo
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForLastTask
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetITStatus
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearITPendingBit
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_GetFlagStatus
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_ClearFlag
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[14c]"></a>RTC_ClearFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[141]"></a>RTC_ClearITPendingBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCAlarm_IRQHandler
</UL>

<P><STRONG><a name="[144]"></a>RTC_Config</STRONG> (Thumb, 192 bytes, Stack size 8 bytes, main.o(i.RTC_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RTC_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForLastTask
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ITConfig
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetFlagStatus
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearFlag
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14e]"></a>RTC_EnterConfigMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_EnterConfigMode))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
</UL>

<P><STRONG><a name="[14f]"></a>RTC_ExitConfigMode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_ExitConfigMode))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
</UL>

<P><STRONG><a name="[142]"></a>RTC_GetCounter</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_GetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCAlarm_IRQHandler
</UL>

<P><STRONG><a name="[14d]"></a>RTC_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[13c]"></a>RTC_GetITStatus</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCAlarm_IRQHandler
</UL>

<P><STRONG><a name="[14b]"></a>RTC_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[143]"></a>RTC_SetAlarm</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, stm32f10x_rtc.o(i.RTC_SetAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_SetAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitConfigMode
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterConfigMode
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCAlarm_IRQHandler
</UL>

<P><STRONG><a name="[14a]"></a>RTC_SetPrescaler</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, stm32f10x_rtc.o(i.RTC_SetPrescaler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_SetPrescaler
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitConfigMode
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterConfigMode
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[140]"></a>RTC_WaitForLastTask</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_WaitForLastTask))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCAlarm_IRQHandler
</UL>

<P><STRONG><a name="[149]"></a>RTC_WaitForSynchro</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_rtc.o(i.RTC_WaitForSynchro))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[138]"></a>RequestProcessController</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, tracker_misc.o(i.RequestProcessController))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = RequestProcessController &rArr; gprsRequestProcess &rArr; Config_Settings_Request_Process &rArr; aasciToFloatCopy &rArr; strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprsRequestProcess
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Read_module
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_StateMachine
</UL>

<P><STRONG><a name="[152]"></a>SMS_Generator</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, gsm.o(i.SMS_Generator))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SMS_Generator &rArr; USART_Put
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Put
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataTransmissionController
</UL>

<P><STRONG><a name="[132]"></a>SMS_GeneratorAlerts</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, gsm.o(i.SMS_GeneratorAlerts))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SMS_GeneratorAlerts &rArr; USART_Put
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Put
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOMessageGenerator
</UL>

<P><STRONG><a name="[151]"></a>SMS_Read_module</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, gsm.o(i.SMS_Read_module))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = SMS_Read_module &rArr; Config_Settings_Request_Process &rArr; aasciToFloatCopy &rArr; strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Processor
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Request_Process
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_OK_Get
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RequestProcessController
</UL>

<P><STRONG><a name="[157]"></a>SPIBus_CS_high_low</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, mcu_io.o(i.SPIBus_CS_high_low))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPIBus_CS_high_low
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIBus_Init
</UL>

<P><STRONG><a name="[158]"></a>SPIBus_Init</STRONG> (Thumb, 252 bytes, Stack size 16 bytes, mcu_io.o(i.SPIBus_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPIBus_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIBus_CS_high_low
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[15a]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIBus_Init
</UL>

<P><STRONG><a name="[19b]"></a>SPI_I2S_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_DMA_Configuration
</UL>

<P><STRONG><a name="[a6]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_SendByte
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA_SendByte
</UL>

<P><STRONG><a name="[a8]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_SendByte
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA_SendByte
</UL>

<P><STRONG><a name="[a7]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_SendByte
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMA_SendByte
</UL>

<P><STRONG><a name="[159]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIBus_Init
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[15b]"></a>SYSCLKConfig_STOP</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, tracker_misc.o(i.SYSCLKConfig_STOP))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SYSCLKConfig_STOP &rArr; RCC_WaitForHSEStartUp &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCmd
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSEConfig
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSYSCLKSource
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeController
</UL>

<P><STRONG><a name="[13d]"></a>SleepModeAlgo</STRONG> (Thumb, 328 bytes, Stack size 8 bytes, tracker_misc.o(i.SleepModeAlgo))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SleepModeAlgo &rArr; TimeComputeController &rArr; eeprom_write_dword &rArr; eeprom_write_byte &rArr; EEPROM_WaitForWriteEnd &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDate_Update
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeComputeController
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCAlarm_IRQHandler
</UL>

<P><STRONG><a name="[139]"></a>SleepModeController</STRONG> (Thumb, 608 bytes, Stack size 24 bytes, tracker_misc.o(i.SleepModeController))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SleepModeController &rArr; dataTransmissionController &rArr; GPRStrackingModule &rArr; PacketNoExtract &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataTransmissionController
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StopConversion
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMode_Interrupt
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartConversion
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Channel_Init
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_EnterSTOPMode
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCLKConfig_STOP
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO_StateMachine
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_TimeDate
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_StateMachine
</UL>

<P><STRONG><a name="[164]"></a>SleepMode_Interrupt</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mcu_io.o(i.SleepMode_Interrupt))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeController
</UL>

<P><STRONG><a name="[166]"></a>Start_Blink</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, tracker_misc.o(i.Start_Blink))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Start_Blink
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[167]"></a>System_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, main.o(i.System_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = System_Init &rArr; COM_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIBus_Init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTI_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Channel_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, main.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM2_IRQHandler &rArr; Command_Send_SEND_Get &rArr; USART_Put
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SEND_Get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 434 bytes, Stack size 8 bytes, main.o(i.TIM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TIM4_IRQHandler &rArr; magnetometer_Heading &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magnetometer_Heading
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDate_Update
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPowerHys
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ignition_module
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IgnitionHys
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO3Hys
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO2Hys
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO1Hys
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO2Hys
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO1Hys
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, main.o(i.TIM5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM5_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture4
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[176]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ARRPreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
</UL>

<P><STRONG><a name="[169]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[12d]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
</UL>

<P><STRONG><a name="[16b]"></a>TIM_GetCapture4</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_GetCapture4))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[168]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[12c]"></a>TIM_ICInit</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_ICInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TIM_ICInit &rArr; TI4_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI4_Config
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI3_Config
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
</UL>

<P><STRONG><a name="[12e]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
</UL>

<P><STRONG><a name="[12a]"></a>TIM_PrescalerConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_PrescalerConfig))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
</UL>

<P><STRONG><a name="[177]"></a>TIM_SetAutoreload</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetAutoreload))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
</UL>

<P><STRONG><a name="[f0]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRStrackingModule
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataRecoveryHandler
</UL>

<P><STRONG><a name="[16d]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetIC1Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[16f]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetIC2Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[171]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetIC3Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[173]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetIC4Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[175]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
</UL>

<P><STRONG><a name="[163]"></a>TimeComputeController</STRONG> (Thumb, 302 bytes, Stack size 8 bytes, tracker_misc.o(i.TimeComputeController))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TimeComputeController &rArr; eeprom_write_dword &rArr; eeprom_write_byte &rArr; EEPROM_WaitForWriteEnd &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_dword
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeAlgo
</UL>

<P><STRONG><a name="[162]"></a>TimeDate_Update</STRONG> (Thumb, 210 bytes, Stack size 8 bytes, gps.o(i.TimeDate_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TimeDate_Update
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsLeapYear
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeAlgo
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[df]"></a>Timer_Init</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, mcu_io.o(i.Timer_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Timer_Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetAutoreload
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
</UL>

<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 1982 bytes, Stack size 8 bytes, main.o(i.UART5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = UART5_IRQHandler &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_DMA_WritePage
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_byte
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_viaCounter
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[b1]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Init
</UL>

<P><STRONG><a name="[105]"></a>USART_Get</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, mcu_io.o(i.USART_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USART_Get &rArr; COM_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Extraction_Module
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPGGA_Extraction_Module
</UL>

<P><STRONG><a name="[17b]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Put
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Get
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
</UL>

<P><STRONG><a name="[178]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f10x_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
</UL>

<P><STRONG><a name="[b0]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f10x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Init
</UL>

<P><STRONG><a name="[af]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, stm32f10x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM_Init
</UL>

<P><STRONG><a name="[94]"></a>USART_Put</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, mcu_io.o(i.USART_Put))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_Put
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SEND_Get
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_GeneratorAlerts
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Generator
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_initialize
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTP_initialize
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_FTP_Get
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APNSettings
</UL>

<P><STRONG><a name="[179]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Get
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
</UL>

<P><STRONG><a name="[17c]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Put
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
</UL>

<P><STRONG><a name="[93]"></a>USART_SendData_s</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, mcu_io.o(i.USART_SendData_s))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataTransmissionController
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_FactorySettings_SIM2
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigReplyReady
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Get
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magnetometer_Heading
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmPowerOn
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmPowerOff
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySysClocks
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainPowerHys
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ignition_module
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Write
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Read
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO3Hys
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO2Hys
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO1Hys
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_FactorySettings_SIM1
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SEND_Get
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnyMotionCriteriaSet
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccelrationXYZ
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accelerometer_Test
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDT_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCAlarm_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeController
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_convert_file
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRStrackingModule
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataRecoveryHandler
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getIMEI
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Read_module
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_GeneratorAlerts
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Generator
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Select_SIM
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Network_Check
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Init_Reset
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_initialize
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTP_initialize
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SATE_Get
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SATE_FTP_Get
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_Network_Get
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_FTPConnect_Get
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_Connect_Get
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_FTP_Get
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCallStatus
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APNSettings
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_RSSI_Get
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_OK_Get
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_MCC_MNC_Get
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Extraction_Module
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WaitForWriteEnd
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[17d]"></a>WWDT_Init</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, main.o(i.WWDT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = WWDT_Init &rArr; GetLSIFrequency &rArr; TIM_ICInit &rArr; TI4_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ClearFlag
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_WriteAccessCmd
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetReload
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetPrescaler
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Enable
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLSIFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[183]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1af]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[90]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GeoDataAppendToBuffer
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppendToBuffer
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magnetometer_Heading
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySysClocks
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ignition_module
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Read
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pingPacketGen_SL_Protocol
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pingPacketGen
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeComputeController
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeController
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Packet_Formatter
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_convert_file
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extension_Formatter
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO_StateMachine
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO_StateMachine
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;geoFencingEngine
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Controller
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSumCalculator
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSTimeProc
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
</UL>

<P><STRONG><a name="[1b0]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[1b1]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[18a]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[53]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[1b2]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[185]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 830 bytes, Stack size 136 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[187]"></a>__kernel_cos</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[188]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[189]"></a>__kernel_sin</STRONG> (Thumb, 224 bytes, Stack size 64 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[18b]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[1b3]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[1b4]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[1b5]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[193]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[78]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scanf_fp.o(i._is_digit), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[8e]"></a>arrayInit2Zero</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, global_defines.o(i.arrayInit2Zero))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataTransmissionController
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GeoDataAppendToBuffer
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestReplyGenOk
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestReplyGenError
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestReplyErrorConfig
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;requestReplyConfig
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmVerGen
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ignition_module
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SEND_Get
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pingPacketGen_SL_Protocol
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pingPacketGen
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Packet_Formatter
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataRecoveryHandler
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO_StateMachine
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AIO_StateMachine
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprsRequestProcess
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getIMEI
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Read_module
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_GeneratorAlerts
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Generator
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Select_SIM
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Init_Reset
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTP_initialize
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SATE_Get
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SATE_FTP_Get
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_Network_Get
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_FTPConnect_Get
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_Connect_Get
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_FTP_Get
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCallStatus
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Processor
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_RSSI_Get
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_OK_Get
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_MCC_MNC_Get
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Controller
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSTimeProc
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Extraction_Module
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPGGA_Extraction_Module
</UL>

<P><STRONG><a name="[135]"></a>ascii_to_hex</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, global_defines.o(i.ascii_to_hex))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAlertOn
</UL>

<P><STRONG><a name="[190]"></a>atan</STRONG> (Thumb, 478 bytes, Stack size 40 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[191]"></a>atan2</STRONG> (Thumb, 346 bytes, Stack size 32 bytes, atan2.o(i.atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distanceCalculator
</UL>

<P><STRONG><a name="[192]"></a>cos</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, cos.o(i.cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distanceCalculator
</UL>

<P><STRONG><a name="[d4]"></a>dataExtractor5Comma</STRONG> (Thumb, 316 bytes, Stack size 56 bytes, configuration.o(i.dataExtractor5Comma))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dataExtractor5Comma
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnlen
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
</UL>

<P><STRONG><a name="[da]"></a>dataExtractor6Comma</STRONG> (Thumb, 356 bytes, Stack size 40 bytes, configuration.o(i.dataExtractor6Comma))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dataExtractor6Comma
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnlen
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
</UL>

<P><STRONG><a name="[dd]"></a>dataExtractor7Comma</STRONG> (Thumb, 402 bytes, Stack size 40 bytes, configuration.o(i.dataExtractor7Comma))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dataExtractor7Comma
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnlen
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
</UL>

<P><STRONG><a name="[dc]"></a>dataExtractor8Comma</STRONG> (Thumb, 452 bytes, Stack size 56 bytes, configuration.o(i.dataExtractor8Comma))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dataExtractor8Comma
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnlen
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
</UL>

<P><STRONG><a name="[de]"></a>dataTransmissionController</STRONG> (Thumb, 306 bytes, Stack size 8 bytes, tracker_misc.o(i.dataTransmissionController))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = dataTransmissionController &rArr; GPRStrackingModule &rArr; PacketNoExtract &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_byte
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_SEND_Get
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Packet_Formatter
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRStrackingModule
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataStringHandler
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataRecoveryHandler
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Generator
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_StateMachine
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepModeController
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
</UL>

<P><STRONG><a name="[194]"></a>displaySysClocks</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, global_defines.o(i.displaySysClocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = displaySysClocks &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fe]"></a>eepromReadDouble</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, configuration.o(i.eepromReadDouble))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = eepromReadDouble &rArr; eeprom_read_byte &rArr; EEPROM_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_read_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Read
</UL>

<P><STRONG><a name="[cd]"></a>eepromWriteDouble</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, configuration.o(i.eepromWriteDouble))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = eepromWriteDouble &rArr; eeprom_write_byte &rArr; EEPROM_WaitForWriteEnd &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
</UL>

<P><STRONG><a name="[100]"></a>eeprom_read_byte</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, eeprom.o(i.eeprom_read_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = eeprom_read_byte &rArr; EEPROM_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_read_word
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_read_dword
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromReadDouble
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromReadFloat
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multiByteContentRead
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Write
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Read
</UL>

<P><STRONG><a name="[db]"></a>eeprom_read_dword</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, eeprom.o(i.eeprom_read_dword))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = eeprom_read_dword &rArr; eeprom_read_byte &rArr; EEPROM_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_read_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Read
</UL>

<P><STRONG><a name="[101]"></a>eeprom_read_word</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, eeprom.o(i.eeprom_read_word))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = eeprom_read_word &rArr; eeprom_read_byte &rArr; EEPROM_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_read_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Read
</UL>

<P><STRONG><a name="[d6]"></a>eeprom_write_byte</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, eeprom.o(i.eeprom_write_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = eeprom_write_byte &rArr; EEPROM_WaitForWriteEnd &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteEnable
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WaitForWriteEnd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_word
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_dword
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataTransmissionController
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multiByteContentWrite
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteDouble
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteFloat
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Write
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_convert_file
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
</UL>

<P><STRONG><a name="[d3]"></a>eeprom_write_dword</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, eeprom.o(i.eeprom_write_dword))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = eeprom_write_dword &rArr; eeprom_write_byte &rArr; EEPROM_WaitForWriteEnd &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Write
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeComputeController
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_convert_file
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Controller
</UL>

<P><STRONG><a name="[d1]"></a>eeprom_write_word</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, eeprom.o(i.eeprom_write_word))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = eeprom_write_word &rArr; eeprom_write_byte &rArr; EEPROM_WaitForWriteEnd &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ignition_module
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Write
</UL>

<P><STRONG><a name="[9a]"></a>gFormat</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, ecompass.o(i.gFormat))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gFormat &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccelrationXYZ
</UL>

<P><STRONG><a name="[11b]"></a>geoFencingEngine</STRONG> (Thumb, 1238 bytes, Stack size 48 bytes, gps.o(i.geoFencingEngine))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = geoFencingEngine &rArr; wn_PnPoly &rArr; isLeft &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wn_PnPoly
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Controller
</UL>

<P><STRONG><a name="[124]"></a>getIMEI</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, gsm.o(i.getIMEI))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = getIMEI &rArr; multiByteContentWrite &rArr; eeprom_write_byte &rArr; EEPROM_WaitForWriteEnd &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multiByteContentWrite
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
</UL>

<P><STRONG><a name="[150]"></a>gprsRequestProcess</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, gsm.o(i.gprsRequestProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = gprsRequestProcess &rArr; Config_Settings_Request_Process &rArr; aasciToFloatCopy &rArr; strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Request_Process
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RequestProcessController
</UL>

<P><STRONG><a name="[d9]"></a>gsmPowerOff</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gsm.o(i.gsmPowerOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gsmPowerOff &rArr; Command_Send_OK_Get &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Command_Send_OK_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Select_SIM
</UL>

<P><STRONG><a name="[122]"></a>gsmPowerOn</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gsm.o(i.gsmPowerOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gsmPowerOn &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Select_SIM
</UL>

<P><STRONG><a name="[197]"></a>isLeft</STRONG> (Thumb, 238 bytes, Stack size 88 bytes, gps.o(i.isLeft))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = isLeft &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wn_PnPoly
</UL>

<P><STRONG><a name="[16a]"></a>magnetometer_Heading</STRONG> (Thumb, 308 bytes, Stack size 8 bytes, ecompass.o(i.magnetometer_Heading))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = magnetometer_Heading &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magnetometer_Heading_Convert
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[198]"></a>magnetometer_Heading_Convert</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, ecompass.o(i.magnetometer_Heading_Convert))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magnetometer_Heading
</UL>

<P><STRONG><a name="[46]"></a>main</STRONG> (Thumb, 784 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = main &rArr; Main_StateMachine &rArr; RequestProcessController &rArr; gprsRequestProcess &rArr; Config_Settings_Request_Process &rArr; aasciToFloatCopy &rArr; strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;multiByteContentRead
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmPowerOn
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmPowerOff
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaySysClocks
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Init
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Blink
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMode_Interrupt
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVectorTable
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Interrupt
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_StateMachine
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Write
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Read
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_FactorySettings_SIM1
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMC_init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnyMotionCriteriaSet
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Accelerometer_Test
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartConversion
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDT_Init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[ff]"></a>multiByteContentRead</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, configuration.o(i.multiByteContentRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = multiByteContentRead &rArr; eeprom_read_byte &rArr; EEPROM_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_read_byte
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Read
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Packet_Formatter
</UL>

<P><STRONG><a name="[cb]"></a>multiByteContentWrite</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, configuration.o(i.multiByteContentWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = multiByteContentWrite &rArr; eeprom_write_byte &rArr; EEPROM_WaitForWriteEnd &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Write
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Packet_Formatter
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getIMEI
</UL>

<P><STRONG><a name="[118]"></a>pingPacketGen</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, tracker_misc.o(i.pingPacketGen))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = pingPacketGen &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnlen
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRStrackingModule
</UL>

<P><STRONG><a name="[115]"></a>pingPacketGen_SL_Protocol</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, tracker_misc.o(i.pingPacketGen_SL_Protocol))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pingPacketGen_SL_Protocol &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnlen
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRStrackingModule
</UL>

<P><STRONG><a name="[125]"></a>sFLASH_DMA_Configuration</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, eeprom.o(i.sFLASH_DMA_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sFLASH_DMA_Configuration &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DMACmd
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StateMachine
</UL>

<P><STRONG><a name="[17a]"></a>sFLASH_DMA_WritePage</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, eeprom.o(i.sFLASH_DMA_WritePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sFLASH_DMA_WritePage &rArr; EEPROM_WriteEnable &rArr; EEPROM_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteEnable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
</UL>

<P><STRONG><a name="[195]"></a>sin</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distanceCalculator
</UL>

<P><STRONG><a name="[9c]"></a>sqrt</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccelrationXYZ
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distanceCalculator
</UL>

<P><STRONG><a name="[ca]"></a>strnlen</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, global_defines.o(i.strnlen))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataExtractor8Comma
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataExtractor7Comma
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataExtractor6Comma
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataExtractor5Comma
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataExtractor4Comma
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataExtractor3Comma
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataExtractor2Comma
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pingPacketGen_SL_Protocol
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pingPacketGen
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Packet_Formatter
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSumCalculator
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPGGA_Paramters_Extract
</UL>

<P><STRONG><a name="[110]"></a>strtod</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, strtod.o(i.strtod))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aasciToFloatCopy
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
</UL>

<P><STRONG><a name="[196]"></a>wn_PnPoly</STRONG> (Thumb, 468 bytes, Stack size 88 bytes, gps.o(i.wn_PnPoly))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = wn_PnPoly &rArr; isLeft &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isLeft
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;geoFencingEngine
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[d7]"></a>NVIC_SystemReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, configuration.o(i.NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
</UL>

<P><STRONG><a name="[cc]"></a>aasciToFloatCopy</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, configuration.o(i.aasciToFloatCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = aasciToFloatCopy &rArr; strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtod
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
</UL>

<P><STRONG><a name="[d0]"></a>dataExtractor2Comma</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, configuration.o(i.dataExtractor2Comma))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dataExtractor2Comma
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnlen
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
</UL>

<P><STRONG><a name="[d2]"></a>dataExtractor3Comma</STRONG> (Thumb, 206 bytes, Stack size 40 bytes, configuration.o(i.dataExtractor3Comma))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dataExtractor3Comma
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnlen
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
</UL>

<P><STRONG><a name="[c9]"></a>dataExtractor4Comma</STRONG> (Thumb, 268 bytes, Stack size 56 bytes, configuration.o(i.dataExtractor4Comma))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dataExtractor4Comma
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnlen
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
</UL>

<P><STRONG><a name="[102]"></a>eepromReadFloat</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, configuration.o(i.eepromReadFloat))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = eepromReadFloat &rArr; eeprom_read_byte &rArr; EEPROM_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_read_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Read
</UL>

<P><STRONG><a name="[d5]"></a>eepromWriteFloat</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, configuration.o(i.eepromWriteFloat))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = eepromWriteFloat &rArr; eeprom_write_byte &rArr; EEPROM_WaitForWriteEnd &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Config_Write
</UL>

<P><STRONG><a name="[d8]"></a>firmVerGen</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, configuration.o(i.firmVerGen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = firmVerGen
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
</UL>

<P><STRONG><a name="[c8]"></a>requestContentExtract</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, configuration.o(i.requestContentExtract))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = requestContentExtract
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
</UL>

<P><STRONG><a name="[c3]"></a>requestReplyConfig</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, configuration.o(i.requestReplyConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = requestReplyConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigReplyReady
</UL>

<P><STRONG><a name="[e2]"></a>requestReplyErrorConfig</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, configuration.o(i.requestReplyErrorConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = requestReplyErrorConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
</UL>

<P><STRONG><a name="[cf]"></a>requestReplyGenError</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, configuration.o(i.requestReplyGenError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = requestReplyGenError
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
</UL>

<P><STRONG><a name="[ce]"></a>requestReplyGenOk</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, configuration.o(i.requestReplyGenOk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = requestReplyGenOk
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Config_Settings_Request_Process
</UL>

<P><STRONG><a name="[104]"></a>GPGGA_Extraction_Module</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, gps.o(i.GPGGA_Extraction_Module))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = GPGGA_Extraction_Module &rArr; USART_Get &rArr; COM_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Get
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSumCalculator
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPGGA_Paramters_Extract
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Controller
</UL>

<P><STRONG><a name="[107]"></a>GPGGA_Paramters_Extract</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, gps.o(i.GPGGA_Paramters_Extract))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPGGA_Paramters_Extract
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnlen
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPGGA_Extraction_Module
</UL>

<P><STRONG><a name="[10d]"></a>GPRMC_Extraction_Module</STRONG> (Thumb, 330 bytes, Stack size 32 bytes, gps.o(i.GPRMC_Extraction_Module))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GPRMC_Extraction_Module &rArr; GPRMC_Paramters_Extract &rArr; strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Get
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSumCalculator
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Controller
</UL>

<P><STRONG><a name="[10e]"></a>GPRMC_Paramters_Extract</STRONG> (Thumb, 1788 bytes, Stack size 48 bytes, gps.o(i.GPRMC_Paramters_Extract))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GPRMC_Paramters_Extract &rArr; strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnlen
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEAParseTime
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEAParseDate
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSTimeProc
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtod
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Extraction_Module
</UL>

<P><STRONG><a name="[112]"></a>GPSTimeProc</STRONG> (Thumb, 218 bytes, Stack size 40 bytes, gps.o(i.GPSTimeProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GPSTimeProc &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
</UL>

<P><STRONG><a name="[174]"></a>IsLeapYear</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, gps.o(i.IsLeapYear))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDate_Update
</UL>

<P><STRONG><a name="[111]"></a>NMEAParseDate</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, gps.o(i.NMEAParseDate))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
</UL>

<P><STRONG><a name="[10f]"></a>NMEAParseTime</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, gps.o(i.NMEAParseTime))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Paramters_Extract
</UL>

<P><STRONG><a name="[106]"></a>checkSumCalculator</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gps.o(i.checkSumCalculator))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = checkSumCalculator &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnlen
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRMC_Extraction_Module
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPGGA_Extraction_Module
</UL>

<P><STRONG><a name="[11a]"></a>distanceCalculator</STRONG> (Thumb, 406 bytes, Stack size 104 bytes, gps.o(i.distanceCalculator))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = distanceCalculator &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_Controller
</UL>

<P><STRONG><a name="[ba]"></a>Command_Send_MCC_MNC_Get</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, gsm.o(i.Command_Send_MCC_MNC_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Command_Send_MCC_MNC_Get &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Network_Check
</UL>

<P><STRONG><a name="[96]"></a>Command_Send_OK_Get</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gsm.o(i.Command_Send_OK_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Command_Send_OK_Get &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsmPowerOff
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Read_module
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Init_Reset
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FTP_initialize
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APNSettings
</UL>

<P><STRONG><a name="[bd]"></a>Command_Send_RSSI_Get</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, gsm.o(i.Command_Send_RSSI_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Command_Send_RSSI_Get &rArr; USART_SendData_s
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_s
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Network_Check
</UL>

<P><STRONG><a name="[156]"></a>GSM_Request_Process</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, gsm.o(i.GSM_Request_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GSM_Request_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprsRequestProcess
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Read_module
</UL>

<P><STRONG><a name="[153]"></a>SMS_Processor</STRONG> (Thumb, 376 bytes, Stack size 8 bytes, gsm.o(i.SMS_Processor))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SMS_Processor &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arrayInit2Zero
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Read_module
</UL>

<P><STRONG><a name="[e5]"></a>IOMessageGenerator</STRONG> (Thumb, 3868 bytes, Stack size 16 bytes, tracker_misc.o(i.IOMessageGenerator))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = IOMessageGenerator &rArr; SMS_GeneratorAlerts &rArr; USART_Put
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_GeneratorAlerts
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IgnitionHys
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO3Hys
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO2Hys
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO1Hys
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIO_StateMachine
</UL>

<P><STRONG><a name="[131]"></a>NVIC_SystemReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tracker_misc.o(i.NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dataTransmissionController
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IAP_convert_file
</UL>

<P><STRONG><a name="[16c]"></a>TI1_Config</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, stm32f10x_tim.o(i.TI1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[16e]"></a>TI2_Config</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, stm32f10x_tim.o(i.TI2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[170]"></a>TI3_Config</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, stm32f10x_tim.o(i.TI3_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI3_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[172]"></a>TI4_Config</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, stm32f10x_tim.o(i.TI4_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI4_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[160]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[161]"></a>SetSysClockTo72</STRONG> (Thumb, 214 bytes, Stack size 12 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[18c]"></a>_fp_digits</STRONG> (Thumb, 334 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[184]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[18e]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[18d]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[4c]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL>
<P><STRONG><a name="[6d]"></a>_local_sscanf</STRONG> (Thumb, 54 bytes, Stack size 56 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
</UL>

<P><STRONG><a name="[75]"></a>_fp_value</STRONG> (Thumb, 256 bytes, Stack size 56 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
